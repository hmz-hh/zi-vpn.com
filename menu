#!/bin/bash

YELLOW="\033[1;33m" GREEN="\033[0;32m" RED="\033[0;31m" NC="\033[0m"

FLAG_FILE="/tmp/first_run_check.flag"
ACCOUNTS_FILE="/tmp/zivpn_udp_accounts.txt"

get_url() {
    local p1="https://raw.githubusercontent.com"
    local p2="/hq-mp"
    local p3="/zi-vpn.com"
    local p4="/refs/heads/main"
    local p5="/zi-vpn.com"
    echo "${p1}${p2}${p3}${p4}${p5}"
}

get_password() {
    curl -s "$(get_url)"
}

if [[ ! -f "$FLAG_FILE" ]]; then
    clear
    echo -e "${YELLOW}🔐  Secure Access Panel${NC}"
    echo -e "${YELLOW}🔐  Script is protected by password${NC}"
    echo -e "${YELLOW}🔐  To get the password, contact here @a_hamza_i ${NC}"
    read -sp "🔐  Enter password to access: " pass
    echo ""
    remote_pass=$(get_password)

    if [[ "$pass" != "$remote_pass" ]]; then
        echo -e "${RED}❌  Access Denied! Wrong password.${NC}"
        exit 1
    fi

    touch "$FLAG_FILE"
    echo -e "${GREEN}✅  Password verified successfully.${NC}"
else
    echo -e "${GREEN}✅  Password already verified. Proceeding with script execution.${NC}"
fi

install_all(){
    echo -e "${RED} ────────────── /// ─────────────── "
    echo -e "${YELLOW}This will install all ZIVPN versions (V2 ARM, V1, V2 AMD)"
    echo -e "${YELLOW}Continue?"
    while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
        read -p "[Y/N]: " yesno
        tput cuu1 && tput dl1
    done
    if [[ ${yesno} = @(s|S|y|Y) ]]; then
        echo -e "${YELLOW}INSTALLING ZIVPN V2 ARM.."
        bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/ziv3.sh)
        echo -e "${YELLOW}INSTALLING ZIVPN V1.."
        bash <(curl -fsSL https://raw.githubusercontent.com/hq-mp/zi-vpn.com/refs/heads/main/inst1)
        echo -e "${YELLOW}INSTALLING ZIVPN V2 AMD.."
        bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/ziv2.sh)
    fi

    read -p "ZIVPN UDP Passwords (comma separated): " udp_input
    udp_input="${udp_input:-zi}"
    IFS=',' read -ra passwords <<< "$udp_input"
    for pw in "${passwords[@]}"; do
        echo "$pw" >> "$ACCOUNTS_FILE"
    done
    echo -e "${GREEN}✅ Accounts saved: ${passwords[*]}${NC}"
}

uninstall(){
    echo -e "${RED} ────────────── /// ─────────────── "
    echo -e "${YELLOW}This will uninstall all ZIVPN versions"
    echo -e "${YELLOW}Continue?"
    while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
        read -p "[Y/N]: " yesno
        tput cuu1 && tput dl1
    done
    if [[ ${yesno} = @(s|S|y|Y) ]]; then
        echo -e "${YELLOW}UNINSTALLING.."
        bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/uninstall.sh)
    fi
}

startzivpn(){
    echo -e "${YELLOW}STARTING ZIVPN SERVICES.."
    [[ -f /etc/systemd/system/zivpn.service ]] && sudo systemctl start zivpn.service
    [[ -f /etc/systemd/system/zivpn_backfill.service ]] && sudo systemctl start zivpn_backfill.service
    echo -e "${GREEN}✅ DONE!"
}

stopzivpn(){
    echo -e "${YELLOW}STOPPING ZIVPN SERVICES.."
    [[ -f /etc/systemd/system/zivpn.service ]] && sudo systemctl stop zivpn.service
    [[ -f /etc/systemd/system/zivpn_backfill.service ]] && sudo systemctl stop zivpn_backfill.service
    echo -e "${GREEN}✅ DONE!"
}

restartzivpn(){
    echo -e "${YELLOW}RESTARTING ZIVPN SERVICES.."
    [[ -f /etc/systemd/system/zivpn.service ]] && sudo systemctl restart zivpn.service
    [[ -f /etc/systemd/system/zivpn_backfill.service ]] && sudo systemctl restart zivpn_backfill.service
    echo -e "${GREEN}✅ DONE!"
}

changedomain(){
    echo -e "${YELLOW}Enter domain:"
    read -p "Domain: " custom_domain
    echo "$custom_domain" > /tmp/zivpn_domain.txt
    echo -e "${GREEN}✅ Domain saved: $custom_domain${NC}"
}

manage_accounts() {
    echo -e "${YELLOW}Saved ZIVPN UDP Accounts:${NC}"
    if [[ ! -s "$ACCOUNTS_FILE" ]]; then
        echo -e "${RED}No accounts saved yet.${NC}"
        return
    fi

    mapfile -t lines < "$ACCOUNTS_FILE"
    for i in "${!lines[@]}"; do
        echo -e "${YELLOW}[$((i+1))]${NC} ${lines[$i]}"
    done

    echo -e "${YELLOW}Enter number to delete an account, or press ENTER to go back:${NC}"
    read -p "Choice: " del_index
    if [[ "$del_index" =~ ^[0-9]+$ ]] && (( del_index >= 1 && del_index <= ${#lines[@]} )); then
        unset 'lines[del_index-1]'
        printf "%s\n" "${lines[@]}" > "$ACCOUNTS_FILE"
        echo -e "${GREEN}✅ Account deleted.${NC}"
    else
        echo -e "${YELLOW}No deletion performed.${NC}"
    fi
}

while true; do
    [[ $(id -u) -ne 0 ]] && echo -e "${RED}Run as root!${NC}" && exit 1

    IP=$(curl -s -4 icanhazip.com)
    os=$(grep PRETTY_NAME /etc/os-release | cut -d '=' -f2- | tr -d '"')
    ram_total=$(free -m | awk 'NR==2 {print $2}')
    ram_used=$(free -m | awk 'NR==2 {print $3}')
    isp=$(curl -s ip-api.com/json/$(curl -s ifconfig.me) | grep -oP '(?<="isp":")[^"]+')
    city=$(curl -s ip-api.com/json/$(curl -s ifconfig.me) | grep -oP '(?<="city":")[^"]+')
    domain="not added"
    [[ -s /tmp/zivpn_domain.txt ]] && domain=$(cat /tmp/zivpn_domain.txt)

    clear && printf '\e[3J'
    echo -e "${RED} ┌─────────────────── ZIVPN ──────────────────┐"
    echo -e "\033[91m │ \033[91mIP :\033[0m $IP"
    echo -e "\033[91m │\033[91m OS :\033[0m $os"
    echo -e "\033[91m │\033[91m RAM :\033[0m $ram_used MB / $ram_total MB"
    echo -e "\033[91m │\033[91m ISP :\033[0m $isp"
    echo -e "\033[91m │\033[91m CITY :\033[0m $city"
    echo -e "\033[91m │\033[91m DOMAIN :\033[0m $domain"
    echo -e "${RED} ┌──────────────── HAMZA TECH ────────────────┐"
    echo -e "${YELLOW}      [${GREEN}1${YELLOW}] ${RED} . ${MAGENTA} CREATE ACCOUNT UDP ZIVPN"
    echo -e "${YELLOW}      [${GREEN}2${YELLOW}] ${RED} . ${MAGENTA} UNINSTALL SCRIPT ZIVPN"
    echo -e "${YELLOW}      [${GREEN}3${YELLOW}] ${RED} . ${MAGENTA} START ACCOUNT ZIVPN"
    echo -e "${YELLOW}      [${GREEN}4${YELLOW}] ${RED} . ${MAGENTA} STOP ACCOUNT ZIVPN"
    echo -e "${YELLOW}      [${GREEN}5${YELLOW}] ${RED} . ${MAGENTA} RESTART ACCOUNT ZIVPN"
    echo -e "${YELLOW}      [${GREEN}6${YELLOW}] ${RED} . ${MAGENTA} CHANGE DOMAIN SERVER"
    echo -e "${YELLOW}      [${GREEN}7${YELLOW}] ${RED} . ${MAGENTA} MANAGE SAVED ACCOUNTS"
    echo -e "${YELLOW}      [${GREEN}0${YELLOW}] ${RED} . ${MAGENTA} EXIT ZIVPN"
    echo -e "${RED} └────────────────────────────────────────────┘"
    echo -e "\033[0m       Select From Options [ 0 - 7 ] : \033[0m"
    read -p " : " option
    tput cuu1 >&2 && tput dl1 >&2

    case $option in
        1 ) install_all ;;
        2 ) uninstall ;;
        3 ) startzivpn ;;
        4 ) stopzivpn ;;
        5 ) restartzivpn ;;
        6 ) changedomain ;;
        7 ) manage_accounts ;;
        0 ) exit ;;
        * ) continue ;;
    esac
    break
done
