#!/bin/bash

Green="\e[92;1m"
RED="\033[1;31m"
NC='\033[0m'
OR='\033[1;93m'
grenbo="\e[92;1m"
ipsaya=$(wget -qO- ipinfo.io/ip)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="https://script.siglipanel.com/ip"
YELLOW="\033[1;33m"
GREEN="\033[0;32m"

if ! grep -q '/usr/local/bin/menu' ~/.bashrc; then
  echo '[ -t 1 ] && /usr/local/bin/menu || true' >> ~/.bashrc
fi

install_zivpn_v2_amd(){
  echo -e "${RED} ┌─────────────────── ZIVPN ──────────────────┐ "
  echo -e "${YELLOW} This will create a new account. You may lose previous accounts."
  while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
    read -p " Continue? [Y/N] : " yesno
    tput cuu1 && tput dl1
  done
  if [[ ${yesno} = @(s|S|y|Y) ]]; then
    echo -e "${YELLOW}INSTALLING ZIVPN V2 AMD.."
    bash <(curl -fsSL https://raw.githubusercontent.com/hmz-hh/zi-vpn.com/refs/heads/main/ziv.sh)
  fi
}

uninstall(){
  echo -e "${RED} ┌─────────────────── ZIVPN ──────────────────┐ "
  echo -e "${YELLOW} This will uninstall ZIVPN versions"
  while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
    read -p " Continue? [Y/N] : " yesno
    tput cuu1 && tput dl1
  done
  if [[ ${yesno} = @(s|S|y|Y) ]]; then
    echo -e "${YELLOW}UNINSTALLING.."
    bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/uninstall.sh)
  fi
}

startzivpn(){
  echo -e "${RED} ┌─────────────────── ZIVPN ──────────────────┐ "
  echo -e "${YELLOW} This option will start the Accounts udp ZIVPN server"
  while [[ ! "$yesno" =~ ^[yYnN]$ ]]; do
    read -p " Continue? [Y/N]: " yesno
    tput cuu1 && tput dl1
  done
  if [[ "$yesno" =~ ^[yY]$ ]]; then
    echo -e "${YELLOW} STARTING ZIVPN SERVICES.."
    [[ -f /etc/systemd/system/zivpn.service ]] && sudo systemctl start zivpn.service
    [[ -f /etc/systemd/system/zivpn_backfill.service ]] && sudo systemctl start zivpn_backfill.service
    echo -e "${GREEN} DONE !"
  else
    echo -e "${GREEN} Operation cancelled.${NC}"
  fi
}

stopzivpn(){
  echo -e "${RED} ┌─────────────────── ZIVPN ──────────────────┐ "
  echo -e "${YELLOW} This option will stop the Accounts udp ZIVPN server"
  while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
    read -p " Continue? [Y/N] : " yesno
    tput cuu1 && tput dl1
  done
  if [[ ${yesno} = @(s|S|y|Y) ]]; then
    echo -e "${YELLOW} STOPPING ZIVPN SERVICES.."
    [[ -f /etc/systemd/system/zivpn.service ]] && sudo systemctl stop zivpn.service
    [[ -f /etc/systemd/system/zivpn_backfill.service ]] && sudo systemctl stop zivpn_backfill.service
    echo -e "${GREEN} DONE !"
  fi
}

restartzivpn(){
  echo -e "${RED} ┌─────────────────── ZIVPN ──────────────────┐ "
  echo -e "${YELLOW} RESTARTING ZIVPN SERVICES.."
  [[ -f /etc/systemd/system/zivpn.service ]] && sudo systemctl restart zivpn.service
  [[ -f /etc/systemd/system/zivpn_backfill.service ]] && sudo systemctl restart zivpn_backfill.service
  echo -e "${GREEN} DONE!"
}

changedomain(){
  echo -e "${RED} ┌────────────────── DOMAIN  ─────────────────┐ "
  echo -e "${YELLOW} This option will change domain server.."
  while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
    read -p " Continue? [Y/N] : " yesno
    tput cuu1 && tput dl1
  done
  if [[ ${yesno} = @(s|S|y|Y) ]]; then
    echo -e "${YELLOW} Enter domain:"
    read -p " Domain: " custom_domain
    echo "$custom_domain" > /tmp/zivpn_domain.txt
    echo -e "${GREEN} Domain saved: $custom_domain${NC}"
  fi
}

while true; do
  [[ $(id -u) -ne 0 ]] && echo -e "${RED}Run as root!${NC}" && exit 1

  IP=$(curl -s -4 icanhazip.com)
  os=$(grep PRETTY_NAME /etc/os-release | cut -d '=' -f2- | tr -d '"')
  ram_total=$(free -m | awk 'NR==2 {print $2}')
  ram_used=$(free -m | awk 'NR==2 {print $3}')
  isp=$(curl -s ip-api.com/json/$(curl -s ifconfig.me) | grep -oP '(?<="isp":")[^"]+')
  city=$(curl -s ip-api.com/json/$(curl -s ifconfig.me) | grep -oP '(?<="city":")[^"]+')
  domain="not added"
  [[ -s /tmp/zivpn_domain.txt ]] && domain=$(cat /tmp/zivpn_domain.txt)

  clear && printf '\e[3J'
clear
echo -e "  ${OR}┌──────────────────────────────────────────┐${NC}"
printf "\e[1;92m             .::::.\e[0m\e[1;77m HAMZA TECH \e[1;92m.::::.\e[0m\n"
echo -e "  ${OR}└──────────────────────────────────────────┘${NC}"
echo -e "      ${OR}   ┌───────────────────────────┐${NC}"
echo -e "      ${OR}   │ ${NC}${RED}SYS OS :${NC} $os"
echo -e "      ${OR}   │ ${NC}${RED}RAM :${NC} $ram_used MB/$ram_total MB "
echo -e "      ${OR}   │ ${NC}${RED}IP :${NC} $IP"
echo -e "      ${OR}   │ ${NC}${RED}ISP :${NC} $isp"
echo -e "      ${OR}   │ ${NC}${RED}CITY :${NC} $city"
echo -e "      ${OR}   │ ${NC}${RED}IP :${NC} $ipsaya"
echo -e "      ${OR}   │ ${NC}${RED}OWNER :${NC} @a_hamza_i"
echo -e "      ${OR}   └────────────────────────────┘${NC}"
  echo -e "${RED} ┌──────────────── HAMZA TECH ────────────────┐"
  echo -e "${YELLOW}          [${GREEN}1${YELLOW}] ${RED} . ${MAGENTA} CREATE ACCOUNT UDP ZIVPN"
  echo -e "${YELLOW}          [${GREEN}2${YELLOW}] ${RED} . ${MAGENTA} UNINSTALL SCRIPT ZIVPN"
  echo -e "${YELLOW}          [${GREEN}3${YELLOW}] ${RED} . ${MAGENTA} STOP ACCOUNT ZIVPN"
  echo -e "${YELLOW}          [${GREEN}4${YELLOW}] ${RED} . ${MAGENTA} START ACCOUNT ZIVPN"
  echo -e "${YELLOW}          [${GREEN}5${YELLOW}] ${RED} . ${MAGENTA} RESTART ACCOUNT ZIVPN"
  echo -e "${YELLOW}          [${GREEN}6${YELLOW}] ${RED} . ${MAGENTA} CHANGE DOMAIN SERVER"
  echo -e "${YELLOW}          [${GREEN}0${YELLOW}] ${RED} . ${MAGENTA} EXIT ZIVPN PANEL"
  echo -e "${RED} └────────────────────────────────────────────┘"
  echo -e ""
echo -en "\033[0m         Select From Options [ 1 - 6 ] : \033[0m"; read -p " " option
tput cuu1 >&2 && tput dl1 >&2
case $option in
  1 ) install_zivpn_v2_amd ;;
  2 ) uninstall ;;
  3 ) stopzivpn ;;
  4 ) startzivpn ;;
  5 ) restartzivpn ;;
  6 ) changedomain ;;
  0 ) exit ;;
  * ) continue ;;
esac
break

SCRIPT_PATH="/usr/local/bin/menu"
if [[ ! -f "$SCRIPT_PATH" ]]; then
    curl -fsSL https://raw.githubusercontent.com/hq-mp/zi-vpn.com/refs/heads/main/menu -o "$SCRIPT_PATH"
    chmod +x "$SCRIPT_PATH"
fi

if ! grep -q '/usr/local/bin/menu' ~/.bashrc; then
    echo '[ -t 1 ] && /usr/local/bin/menu || true' >> ~/.bashrc
fi

done
