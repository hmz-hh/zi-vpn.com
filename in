#!/bin/bash
#hamza - PowerMX

LOCK_FILE="/tmp/script_auth.lock"
ATTEMPT_FILE="/tmp/script_auth.attempts"
MAX_ATTEMPTS=3
BLOCK_TIME=600  # 10 دقائق = 600 ثانية
PASSWORD="HAMZAZIDANE200"

# ألوان
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# تحقق واش راه البلوك مفعل
if [[ -f "$LOCK_FILE" ]]; then
    LAST_BLOCK=$(cat "$LOCK_FILE")
    CURRENT_TIME=$(date +%s)
    DIFF=$((CURRENT_TIME - LAST_BLOCK))

    if [[ $DIFF -lt $BLOCK_TIME ]]; then
        echo -e "${RED}⛔ تم منع المحاولة. جرب من بعد 10 دقايق.${NC}"
        exit 1
    else
        rm -f "$LOCK_FILE"
        rm -f "$ATTEMPT_FILE"
    fi
fi

# المحاولات
ATTEMPTS=0
if [[ -f "$ATTEMPT_FILE" ]]; then
    ATTEMPTS=$(cat "$ATTEMPT_FILE")
fi

# الدخول
while [[ $ATTEMPTS -lt $MAX_ATTEMPTS ]]; do
    clear
    echo -e "${YELLOW}🔐 Secure Access Panel${NC}"
    read -sp "🔒 Enter password to access script: " pass
    echo ""

    if [[ "$pass" == "$PASSWORD" ]]; then
        echo -e "${YELLOW}✅ Access granted.${NC}"
        rm -f "$ATTEMPT_FILE"
        # كمل تنفيذ السكريبت هنا
        exit 0
    else
        ((ATTEMPTS++))
        echo -e "${RED}❌ Wrong password. Attempts left: $((MAX_ATTEMPTS - ATTEMPTS))${NC}"
        echo "$ATTEMPTS" > "$ATTEMPT_FILE"
    fi
done

# بلوك المستخدم
date +%s > "$LOCK_FILE"
echo -e "${RED}⛔ Access blocked for 10 minutes due to multiple failed attempts.${NC}"
exit 1


IP=`curl -4 icanhazip.com`;
distribution=`( lsb_release -ds || cat /etc/*release || uname -om ) 2>/dev/null | head -n1`;
Network=`ip -4 route ls|grep default|grep -Po '(?<=dev )(\S+)'|head -1`;
ports=`netstat -tunlp | grep zivpn | grep ::: | awk '{print substr($4,4); }' > /tmp/udpzivpn.txt && echo | cat /tmp/udpzivpn.txt | tr '\n' ' ' > /tmp/udpzivpnports.txt && cat /tmp/udpzivpnports.txt`;
#colors
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
PURPLE='\033[1;35m'
CYAN='\033[1;36m'
GRAY='\033[1;37m'
WHITE='\033[1;37m'
RESET='\033[0m'
#menu
while true; do
  if [ $(id -u) -eq 0 ]; then
    clear
  else
    echo -e "Run the script as root user"
    exit
  fi
#installv1
function installv1(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will install ZIVPN version 1, UDP port range will be 20000:50000 redirected to 5666"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[Y/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}INSTALLING.."
bash <(curl -fsSL https://raw.githubusercontent.com/hq-mp/zi-vpn.com/refs/heads/main/inst1)
fi
}
#installv2
function installv2(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will install ZIVPN version 2 AMD, UDP port range will be 6000:19999 redirected to 5667"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[Y/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}INSTALLING.."
bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/ziv2.sh)
fi
}
#installv3
function installv3(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will install ZIVPN version 2 ARM, UDP port range will be 6000:19999 redirected to 5667"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[Y/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}INSTALLING.."
bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/ziv3.sh)
fi
}
#uninstall
function uninstall(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will uninstall the script ZIVPN server in any of its versions"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[Y/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}UNINSTALLING.."
bash <(curl -fsSL https://raw.githubusercontent.com/powermx/zivpn/main/uninstall.sh)
fi
}
#start
function startzivpn(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will start the Accounts udp ZIVPN server"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[Y/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}STARTING.."
    if [[ ${yesno} = @(s|S|y|Y) ]]; then
        echo -e "${YELLOW}Checking for ZiVPN services..."
        
        if [[ -f /etc/systemd/system/zivpn.service ]]; then
            echo -e "${YELLOW}Starting ZiVPN service..."
            sudo systemctl start zivpn.service
        fi
        if [[ -f /etc/systemd/system/zivpn_backfill.service ]]; then
            echo -e "${YELLOW}Starting ZiVPN Backfill service..."
            sudo systemctl start zivpn_backfill.service
        fi
        
        echo -e "${YELLOW}DONE!"
    fi
fi
}
#stop
function stopzivpn(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will stop the Accounts udp zivpn server"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[Y/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}STOPPING.."
    if [[ ${yesno} = @(s|S|y|Y) ]]; then
        echo -e "${YELLOW}Checking for ZiVPN services..."
        
        if [[ -f /etc/systemd/system/zivpn.service ]]; then
            echo -e "${YELLOW}Starting ZiVPN service..."
            sudo systemctl stop zivpn.service
        fi
        if [[ -f /etc/systemd/system/zivpn_backfill.service ]]; then
            echo -e "${YELLOW}Starting ZiVPN Backfill service..."
            sudo systemctl stop zivpn_backfill.service
        fi
        
        echo -e "${YELLOW}DONE!"
    fi
fi
}
m restart
function restartzivpn(){
echo -e "${RED} ────────────── /// ─────────────── "
echo -e "${YELLOW}This option will restart the Accounts udp ZIVPN server"
echo -e "${YELLOW}Continue?"
while [[ ${yesno} != @(s|S|y|Y|n|N) ]]; do
read -p "[S/N]: " yesno
tput cuu1 && tput dl1
done
if [[ ${yesno} = @(s|S|y|Y) ]]; then
echo -e "${YELLOW}RESTARTING.."
    if [[ ${yesno} = @(s|S|y|Y) ]]; then
        echo -e "${YELLOW}Checking for ZiVPN services..."
        
        if [[ -f /etc/systemd/system/zivpn.service ]]; then
            echo -e "${YELLOW}Starting ZiVPN service..."
            sudo systemctl restart zivpn.service
        fi
        if [[ -f /etc/systemd/system/zivpn_backfill.service ]]; then
            echo -e "${YELLOW}Starting ZiVPN Backfill service..."
            sudo systemctl restart zivpn_backfill.service
        fi
        
        echo -e "${YELLOW}DONE!"
    fi
fi
}
  if [[ $1 == "" ]]; then
    clear && printf '\e[3J'
echo -e "${GRAY}${RED}${GRAY}${RED} ┌─────────────────── ZIVPN ──────────────────┐ "
echo -e "\033[91m │ \033[91mIP :\033[0m $IP"

# OS
os=$(cat /etc/os-release | grep PRETTY_NAME | cut -d "=" -f 2- | tr -d '"')
echo -e "\033[91m │\033[0m \033[91mOS :\033[0m $os"

# RAM
ram_total=$(free -m | awk 'NR==2 {print $2}')
ram_used=$(free -m | awk 'NR==2 {print $3}')
echo -e "\033[91m │\033[0m \033[91mRAM :\033[0m $ram_used MB / $ram_total MB"

# ISP
isp=$(curl -s ip-api.com/json/$(curl -s ifconfig.me) | sed 's/.*"isp":"\([^"]*\).*/\1/')
echo -e "\033[91m │\033[0m \033[91mISP :\033[0m $isp"

# City
city=$(curl -s ip-api.com/json/$(curl -s ifconfig.me) | sed 's/.*"city":"\([^"]*\).*/\1/')
echo -e "\033[91m │\033[0m \033[91mCITY :\033[0m $city"
echo -e "${GRAY}${RED}${GRAY}${RED} ┌──────────────── HAMZA TECH ────────────────┐ "
echo -e "${YELLOW}      [${GREEN}1${YELLOW}] ${RED} 🔑 ${MAGENTA} INSTALL ZIVPN V2 ARM (5667)
${YELLOW}      [${GREEN}2${YELLOW}] ${RED} ➕ ${MAGENTA} INSTALL ZIVPN V2 AMD (5667)
${YELLOW}      [${GREEN}3${YELLOW}] ${RED} 📋 ${MAGENTA} INSTALL ZIVPN V1 (5666)
${YELLOW}      [${GREEN}4${YELLOW}] ${RED} 🗑️ ${MAGENTA} UNINSTALL SCRIPT ZIVPN
${YELLOW}      [${GREEN}5${YELLOW}] ${RED} ⏰ ${MAGENTA} START ACCOUNT ZIVPN
${YELLOW}      [${GREEN}6${YELLOW}] ${RED} 🔑 ${MAGENTA} STOP ACCOUNT ZIVPN
${YELLOW}      [${GREEN}7${YELLOW}] ${RED} 💾 ${MAGENTA} RESTART ACCOUNT ZIVPN
${YELLOW}      [${GREEN}0${YELLOW}] ${RED} 🚪 ${MAGENTA} EXIT ZIVPN
${GRAY}${RED}${GRAY}${RED} └────────────────────────────────────────────┘ "
echo -e "\033[0m Select From Options [ 1 - 6 ] : \033[0m"
read -p " : " option
tput cuu1 >&2 && tput dl1 >&2
else
option=$1
fi
case $option in
  1 | 01 )
   installv3;;
  2 | 02 )
   installv1;;
  3 | 03 )
   installv2;;
  4 | 04)
   uninstall;;
  5 | 05)
   startzivpn;;
  6 | 06)
   stopzivpn;;
  7 | 07)
   restartzivpn;;
  0)
  exit;;
  *)
  continue;;
  esac
  break
  done
